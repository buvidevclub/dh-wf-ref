on:
  push:
  workflow_call:
    inputs:
      gcp_project_id:
        required: true
        type: string
      gcp_wi_provider:
        required: true
        type: string
      gcp_serviceaccount:
        required: true
        type: string
env:
  PROJECT_ID: ${{ inputs.gcp_project_id }}

jobs:
  checkout-auth-setup_sdk:
    name: Setup auth and Cloud SDK
    runs-on: ubuntu-latest
    outputs:
      gcp-token: ${{ steps.step1.outputs.gcp-token }}

    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Print environment
      run: |-
        printenv|sort
    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0.4.0'
      with:
        workload_identity_provider: ${{ inputs.gcp_wi_provider }}
        service_account: ${{ inputs.gcp_serviceaccount }}
        token_format: 'access_token'
        access_token_lifetime: 300s
    - id: output
      name: output token
      run: echo "::set-output name=gcp-token::${{ steps.auth.outputs.access_token }}"

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'
    
    - name: Create bucket for state
      run: |
        gcloud auth login
        gsutil mb gs://${PROJECT_ID}-tfstate

